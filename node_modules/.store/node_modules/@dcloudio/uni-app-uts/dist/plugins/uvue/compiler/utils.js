"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.genComponentPublicInstanceImported = exports.genImportComponentPublicInstance = exports.onCompilerError = exports.rewriteObjectExpression = exports.genRenderFunctionDecl = void 0;
const compiler_core_1 = require("@vue/compiler-core");
const compiler_sfc_1 = require("@vue/compiler-sfc");
const parser_1 = require("@babel/parser");
const transformExpression_1 = require("./transforms/transformExpression");
const shared_1 = require("@vue/shared");
const uni_cli_shared_1 = require("@dcloudio/uni-cli-shared");
const path_1 = __importDefault(require("path"));
const utils_1 = require("../../utils");
function genRenderFunctionDecl({ targetLanguage, className, }) {
    return `${targetLanguage === 'kotlin' ? '@Suppress("UNUSED_PARAMETER") ' : ''}function ${className}Render(): VNode | null`;
}
exports.genRenderFunctionDecl = genRenderFunctionDecl;
function rewriteObjectExpression(exp, context) {
    const source = (0, transformExpression_1.stringifyExpression)(exp);
    if (source.includes('{')) {
        const s = new compiler_sfc_1.MagicString(source);
        const ast = (0, parser_1.parseExpression)(source, {
            plugins: context.expressionPlugins,
        });
        (0, compiler_sfc_1.walk)(ast, {
            enter(node) {
                if (node.type === 'ObjectExpression') {
                    s.prependLeft(node.start, node.properties.length > 0
                        ? 'utsMapOf('
                        : 'utsMapOf<string, any | null>(');
                    s.prependRight(node.end, ')');
                }
            },
        });
        return (0, compiler_core_1.createSimpleExpression)(s.toString(), false, exp.loc);
    }
}
exports.rewriteObjectExpression = rewriteObjectExpression;
function onCompilerError(error) { }
exports.onCompilerError = onCompilerError;
function genImportComponentPublicInstance(rootDir, tagName, fileName) {
    if (fileName.includes('@dcloudio')) {
        return '';
    }
    return `, { ${genComponentPublicInstanceImported(rootDir, fileName)} as ${genComponentPublicInstanceIdent(tagName)} }`;
}
exports.genImportComponentPublicInstance = genImportComponentPublicInstance;
function genComponentPublicInstanceIdent(tagName) {
    return (0, shared_1.capitalize)((0, shared_1.camelize)(tagName)) + 'ComponentPublicInstance';
}
function genComponentPublicInstanceImported(root, fileName) {
    if (fileName.startsWith('@/')) {
        return (utils_1.UVUE_CLASS_NAME_PREFIX +
            (0, shared_1.capitalize)((0, shared_1.camelize)((0, uni_cli_shared_1.removeExt)(fileName.replace('@/', ''))
                .replace(/\//g, '-')
                .replace(/@/g, '')
                .replace(/\./g, ''))) +
            'ComponentPublicInstance');
    }
    return (utils_1.UVUE_CLASS_NAME_PREFIX +
        (0, shared_1.capitalize)((0, shared_1.camelize)((0, uni_cli_shared_1.removeExt)((0, uni_cli_shared_1.normalizeNodeModules)(path_1.default.relative(root, fileName)))
            .replace(/\//g, '-')
            .replace(/@/g, '')
            .replace(/\./g, ''))) +
        'ComponentPublicInstance');
}
exports.genComponentPublicInstanceImported = genComponentPublicInstanceImported;
